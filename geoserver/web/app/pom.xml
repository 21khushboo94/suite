<?xml version="1.0" encoding="ISO-8859-1"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.opengeo.geoserver</groupId>
    <artifactId>web</artifactId>
    <version>4-SNAPSHOT</version>
  </parent>

  <groupId>org.opengeo.geoserver</groupId>
  <artifactId>web-app</artifactId>
  <packaging>jar</packaging>
  <name>OpenGeo Suite GeoServer Web App Module</name>

  <dependencies>
    <!-- core geoserver modules -->
    <dependency>
      <groupId>org.geoserver.web</groupId>
      <artifactId>gs-web-app</artifactId>
    </dependency>
    <dependency>
      <groupId>org.geoserver.web</groupId>
      <artifactId>gs-web-security</artifactId>
    </dependency>

    <!-- extension modules -->
    <dependency>
      <groupId>org.geoserver.extension</groupId>
      <artifactId>gs-control-flow</artifactId>
    </dependency>
    <dependency>
      <groupId>org.geoserver.extension</groupId>
      <artifactId>gs-h2</artifactId>
    </dependency>
    <dependency>
      <groupId>org.geoserver.importer</groupId>
      <artifactId>gs-importer-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.geoserver.importer</groupId>
      <artifactId>gs-importer-rest</artifactId>
    </dependency>

    <!-- opengeo specific stuff -->
    <dependency>
      <groupId>org.opengeo.geoserver</groupId>
      <artifactId>web-demo</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.opengeo.geoserver</groupId>
      <artifactId>web-theme</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>xmlunit</groupId>
      <artifactId>xmlunit</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- Jetty test deps so that we can start GeoServer from an IDE as well -->
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-server</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-jndi</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-plus</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <inherited>true</inherited>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.3</version>
        <configuration>
          <warName>geoserver</warName>
          <webappDirectory>${project.build.directory}/geoserver</webappDirectory>
        </configuration>
        <executions>
          <execution>
            <phase>install</phase>
            <goals>
              <goal>war</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>configPackage</id>
            <phase>package</phase>
            <configuration>
              <tasks>

<available file="${dataDir}" property="configIsAvailable"/>
<fail message="Unable to locate configuration: ${dataDir}" 
  unless="configIsAvailable" />

<echo message="Copying data dir from ${dataDir}" />
<copy todir="${webappSourceDirectory}/data" overwrite="true">
  <fileset dir="${dataDir}" includes="**/**"/>
</copy>

             </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
          <execution>
            <id>configClean</id>
            <phase>clean</phase>
            <configuration>
              <tasks>
                <delete dir="${webappSourceDirectory}/data" />
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
          <execution>
            <id>clean</id>
            <phase>clean</phase>
            <configuration>
              <tasks>
                <delete dir="${warSourceDirectory}"/>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
          <execution>
            <id>generate-resources</id>
            <phase>generate-resources</phase>
            <configuration>
              <tasks>
                <mkdir dir="${warSourceDirectory}"/>
                <copy todir="${warSourceDirectory}">
                  <fileset dir="${basedir}/../../externals/geoserver/src/web/app/src/main/webapp" includes="**/*" excludes="data/**/*"/>
                </copy>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <properties>
    <warSourceDirectory>${basedir}/src/main/webapp</warSourceDirectory>
    <webappSourceDirectory>${basedir}/src/main/webapp</webappSourceDirectory>
    <configId>data_dir</configId>
    <configDirectory>../../data_dir/target</configDirectory>
    <dataDir>${configDirectory}/${configId}</dataDir>
  </properties>

</project>
